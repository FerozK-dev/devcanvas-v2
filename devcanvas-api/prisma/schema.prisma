datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  firstName  String
  lastName String
  email String @unique
  password String
  location String?
  aboutMe String?
  contact String?
  title String?
  headline String?
  githubUrl String?
  linkedUrl String?
  workEmail String?
  publishPortfolio Boolean @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  educations  Education[]
  experiences Experience[]
  projects Project[]
}

model Education {
  id           Int      @id @default(autoincrement())
  school       String
  degree       String?
  field        String?
  startYear    DateTime?
  endYear      DateTime?
  grade        String?
  activities   String?
  description  String?
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Experience {
  id              Int      @id @default(autoincrement())
  title           String
  employmentType  String?  // Nullable
  company         String
  location        String?  // Nullable
  startDate       DateTime
  endDate         DateTime?
  industry        String?  // Nullable
  headline        String?  // Nullable
  description     String?  // Nullable
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          Int?
  portfolioId     Int?
  user            User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id              Int      @id @default(autoincrement())
  title           String
  description     String?  // Nullable
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          Int?
  user            User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
